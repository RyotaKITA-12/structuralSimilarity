digraph {
	0 [label="If
if A[j + 1] < A[j]:
    (A[j], A[j + 1]) = (A[j + 1], A[j])"]
	1 [label="Compare
A[j + 1] < A[j]"]
	0 -> 1
	2 [label="Subscript
A[j + 1]"]
	1 -> 2
	3 [label="Name
A"]
	2 -> 3
	4 [label=Load
]
	3 -> 4
	5 [label="BinOp
j + 1"]
	2 -> 5
	6 [label="Name
j"]
	5 -> 6
	7 [label=Load
]
	6 -> 7
	8 [label=Add
]
	5 -> 8
	9 [label="Constant
1"]
	5 -> 9
	10 [label=Load
]
	2 -> 10
	11 [label=Lt
]
	1 -> 11
	12 [label="Subscript
A[j]"]
	1 -> 12
	13 [label="Name
A"]
	12 -> 13
	14 [label=Load
]
	13 -> 14
	15 [label="Name
j"]
	12 -> 15
	16 [label=Load
]
	15 -> 16
	17 [label=Load
]
	12 -> 17
	18 [label="Assign
(A[j], A[j + 1]) = (A[j + 1], A[j])"]
	0 -> 18
	19 [label="Tuple
(A[j], A[j + 1])"]
	18 -> 19
	20 [label="Subscript
A[j]"]
	19 -> 20
	21 [label="Name
A"]
	20 -> 21
	22 [label=Load
]
	21 -> 22
	23 [label="Name
j"]
	20 -> 23
	24 [label=Load
]
	23 -> 24
	25 [label=Store
]
	20 -> 25
	26 [label="Subscript
A[j + 1]"]
	19 -> 26
	27 [label="Name
A"]
	26 -> 27
	28 [label=Load
]
	27 -> 28
	29 [label="BinOp
j + 1"]
	26 -> 29
	30 [label="Name
j"]
	29 -> 30
	31 [label=Load
]
	30 -> 31
	32 [label=Add
]
	29 -> 32
	33 [label="Constant
1"]
	29 -> 33
	34 [label=Store
]
	26 -> 34
	35 [label=Store
]
	19 -> 35
	36 [label="Tuple
(A[j + 1], A[j])"]
	18 -> 36
	37 [label="Subscript
A[j + 1]"]
	36 -> 37
	38 [label="Name
A"]
	37 -> 38
	39 [label=Load
]
	38 -> 39
	40 [label="BinOp
j + 1"]
	37 -> 40
	41 [label="Name
j"]
	40 -> 41
	42 [label=Load
]
	41 -> 42
	43 [label=Add
]
	40 -> 43
	44 [label="Constant
1"]
	40 -> 44
	45 [label=Load
]
	37 -> 45
	46 [label="Subscript
A[j]"]
	36 -> 46
	47 [label="Name
A"]
	46 -> 47
	48 [label=Load
]
	47 -> 48
	49 [label="Name
j"]
	46 -> 49
	50 [label=Load
]
	49 -> 50
	51 [label=Load
]
	46 -> 51
	52 [label=Load
]
	36 -> 52
}
